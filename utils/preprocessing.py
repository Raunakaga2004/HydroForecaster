# -*- coding: utf-8 -*-
"""preprocessing

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nB9E_9Mc-DhRlCUf6mr2scwNFnVpxPaB
"""

# pip install pandas scikit-learn joblib

import pandas as pd
from sklearn.base import BaseEstimator, TransformerMixin
from sklearn.pipeline import Pipeline
import joblib

class GroundwaterPreprocessor(BaseEstimator, TransformerMixin):
    def fit(self, X, y=None):
        return self

    def transform(self, X):
        df = X.copy()

        # Date parsing
        df['date'] = pd.to_datetime(df['date'], errors='coerce')
        df = df.sort_values(by='date')
        df = df.dropna(subset=['date', 'currentlevel'])

        # Remove outliers using IQR
        Q1 = df['currentlevel'].quantile(0.25)
        Q3 = df['currentlevel'].quantile(0.75)
        IQR = Q3 - Q1
        lower_bound = Q1 - 1.5 * IQR
        upper_bound = Q3 + 1.5 * IQR
        df = df[(df['currentlevel'] >= lower_bound) & (df['currentlevel'] <= upper_bound)]

        # Set index and derive time-based features
        df.set_index('date', inplace=True)
        df['level_diff'] = df['currentlevel'].diff()
        df.dropna(inplace=True)

        df['year'] = df.index.year
        df['month'] = df.index.month
        df['day'] = df.index.day

        # Custom season feature (encoded)
        df['season'] = df['month'].map({
            12: 'Winter', 1: 'Winter', 2: 'Winter',
            3: 'Summer', 4: 'Summer', 5: 'Summer',
            6: 'Monsoon', 7: 'Monsoon', 8: 'Monsoon',
            9: 'Post-Monsoon', 10: 'Post-Monsoon', 11: 'Post-Monsoon'
        })
        df['season'] = df['season'].astype('category').cat.codes

        return df[['currentlevel', 'level_diff', 'year', 'month', 'day', 'season']]

# Create pipeline
pipeline = Pipeline([
    ('groundwater_preprocessing', GroundwaterPreprocessor())
])

# Save pipeline
joblib.dump(pipeline, 'preprocess.pkl')
print("âœ… Preprocessing pipeline saved as model/preprocess.pkl")